{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fatma mohamed\\\\OneDrive\\\\Desktop\\\\intership\\\\new\\\\tickets\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const location = useLocation();\n  const menuItems = [{\n    path: '/',\n    label: 'Dashboard'\n  }, {\n    path: '/tickets',\n    label: 'Tickets'\n  }, {\n    path: '/teamsDashboard',\n    label: 'Teams'\n  }, {\n    path: '/productPage',\n    label: 'Product'\n  }, {\n    path: '/infrastructure',\n    label: 'Infrastructure'\n  }, {\n    path: '/safe',\n    label: 'Safe'\n  }, {\n    path: '/documents',\n    label: 'Documents'\n  }, {\n    path: '/knowledge-bases',\n    label: 'Knowledge bases'\n  }, {\n    path: '/tasks',\n    label: 'Tasks'\n  }, {\n    path: '/communication',\n    label: 'Communication'\n  }, {\n    path: '/reports',\n    label: 'Reports'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidebar\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"sidebar-nav\",\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(Link, {\n        to: item.path,\n        className: `sidebar-item ${location.pathname === item.path ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sidebar-label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, item.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Sidebar;\nexport default Sidebar;\n\n// import React from \"react\";\n// import List from \"@mui/material/List\";\n// import Divider from \"@mui/material/Divider\";\n// import ListItem from \"@mui/material/ListItem\";\n// import ListItemButton from \"@mui/material/ListItemButton\";\n// import ListItemIcon from \"@mui/material/ListItemIcon\";\n// import ListItemText from \"@mui/material/ListItemText\";\n// import { Avatar, styled, useTheme, Tooltip } from \"@mui/material\";\n// import MuiDrawer from \"@mui/material/Drawer\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import { grey } from \"@mui/material/colors\";\n// import DashboardOutlinedIcon from \"@mui/icons-material/DashboardOutlined\";\n// import corelia from \"../assets/corelia.jpeg\";\n\n// const drawerWidth = 240;\n\n// const openedMixin = (theme) => ({\n//   width: drawerWidth,\n//   transition: theme.transitions.create(\"width\", {\n//     easing: theme.transitions.easing.sharp,\n//     duration: theme.transitions.duration.enteringScreen,\n//   }),\n//   overflowX: \"hidden\",\n// });\n\n// const closedMixin = (theme) => ({\n//   transition: theme.transitions.create(\"width\", {\n//     easing: theme.transitions.easing.sharp,\n//     duration: theme.transitions.duration.leavingScreen,\n//   }),\n//   overflowX: \"hidden\",\n//   width: `calc(${theme.spacing(7)} + 1px)`,\n//   [theme.breakpoints.up(\"sm\")]: {\n//     width: `calc(${theme.spacing(8)} + 1px)`,\n//   },\n// });\n\n// const Drawer = styled(MuiDrawer, {\n//   shouldForwardProp: (prop) => prop !== \"open\",\n// })(({ theme, open }) => ({\n//   width: drawerWidth,\n//   flexShrink: 0,\n//   whiteSpace: \"nowrap\",\n//   boxSizing: \"border-box\",\n//   ...(open && {\n//     ...openedMixin(theme),\n//     \"& .MuiDrawer-paper\": openedMixin(theme),\n//   }),\n//   ...(!open && {\n//     ...closedMixin(theme),\n//     \"& .MuiDrawer-paper\": closedMixin(theme),\n//   }),\n// }));\n\n// const DrawerHeader = styled(\"div\")(({ theme }) => ({\n//   display: \"flex\",\n//   alignItems: \"center\",\n//   justifyContent: \"flex-end\",\n//   padding: theme.spacing(0, 1),\n//   ...theme.mixins.toolbar,\n// }));\n\n// const Array1 = [\n//   { text: \"Dashboard\", icon: <DashboardOutlinedIcon />, path: \"/dashboard\" },\n//   { text: \"Tickets\", path: \"/tickets\" },\n//   { text: \"Teams\", path: \"/teamsdashboard\" },\n//   { text: \"products\", path: \"/productpage\" },\n//   { text: \"Infrastructure\", path: \"/infrastructure\" },\n//   { text: \"Safe\", path: \"/safe\" },\n//   { text: \"Documents\", path: \"/documents\" },\n//   { text: \"Knowledge\", path: \"/knowledge\" },\n//   { text: \"Tasks\", path: \"/tasks\" },\n//   { text: \"Communication\", path: \"/communication\" },\n//   { text: \"Reports\", path: \"/reports\" },\n// ];\n\n// const SideBar = ({ open, handleDrawerClose }) => {\n//   const location = useLocation();\n//   const navigate = useNavigate();\n//   const theme = useTheme();\n\n//   return (\n//     <Drawer variant=\"permanent\" open={open}>\n//       <Divider />\n//       <Avatar\n//         sx={{\n//           alignContent: \"center\",\n//           textAlign: \"center\",\n//           width: 200,\n//           marginLeft: 1,\n//           height: 72,\n//           borderRadius: 0,\n//         }}\n//         alt=\"Randa Erfan\"\n//         src={corelia}\n//       />\n\n//       <Divider />\n\n//       <List>\n//         {Array1.map((item) => (\n//           <ListItem key={item.path} disablePadding sx={{ display: \"block\" }}>\n//             <Tooltip title={open ? null : item.text} placement=\"left\">\n//               <ListItemButton\n//                 onClick={() => {\n//                   navigate(item.path);\n//                 }}\n//                 sx={{\n//                   minHeight: 48,\n//                   justifyContent: open ? \"initial\" : \"center\",\n//                   px: 2.5,\n//                   bgcolor:\n//                     location.pathname === item.path\n//                       ? theme.palette.mode === \"dark\"\n//                         ? grey[800]\n//                         : grey[300]\n//                       : null,\n//                 }}\n//               >\n//                 <ListItemIcon\n//                   sx={{\n//                     minWidth: 0,\n//                     mr: open ? 3 : \"auto\",\n//                     justifyContent: \"center\",\n//                   }}\n//                 >\n//                   {item.icon}\n//                 </ListItemIcon>\n//                 <ListItemText\n//                   primary={item.text}\n//                   sx={{ opacity: open ? 1 : 0 }}\n//                 />\n//               </ListItemButton>\n//             </Tooltip>\n//           </ListItem>\n//         ))}\n//       </List>\n//     </Drawer>\n//   );\n// };\n\n// export default SideBar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","Link","useLocation","jsxDEV","_jsxDEV","Sidebar","_s","location","menuItems","path","label","className","children","map","item","to","pathname","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fatma mohamed/OneDrive/Desktop/intership/new/tickets/src/components/Sidebar.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport './Sidebar.css'\r\n\r\nconst Sidebar = () => {\r\n  const location = useLocation()\r\n  \r\n  const menuItems = [\r\n    { path: '/', label: 'Dashboard'},\r\n    { path: '/tickets', label: 'Tickets'},\r\n    { path: '/teamsDashboard', label: 'Teams' },\r\n    { path: '/productPage', label: 'Product'},\r\n    { path: '/infrastructure', label: 'Infrastructure' },\r\n    { path: '/safe', label: 'Safe' },\r\n    { path: '/documents', label: 'Documents' },\r\n    { path: '/knowledge-bases', label: 'Knowledge bases'},\r\n    { path: '/tasks', label: 'Tasks' },\r\n    { path: '/communication', label: 'Communication' },\r\n    { path: '/reports', label: 'Reports' }\r\n  ]\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <nav className=\"sidebar-nav\">\r\n        {menuItems.map((item) => (\r\n          <Link\r\n            key={item.path}\r\n            to={item.path}\r\n            className={`sidebar-item ${location.pathname === item.path ? 'active' : ''}`}\r\n          >\r\n            {/* <span className=\"sidebar-icon\">\r\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\r\n                <circle cx=\"9\" cy=\"9\" r=\"2\"></circle>\r\n                <path d=\"M21 15.5c-1.5-1.5-4-1.5-5.5 0\"></path>\r\n                <path d=\"M12 12l9 9\"></path>\r\n              </svg>\r\n            </span> */}\r\n            <span className=\"sidebar-label\">{item.label}</span>\r\n          </Link>\r\n        ))}\r\n      </nav>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n\r\n// import React from \"react\";\r\n// import List from \"@mui/material/List\";\r\n// import Divider from \"@mui/material/Divider\";\r\n// import ListItem from \"@mui/material/ListItem\";\r\n// import ListItemButton from \"@mui/material/ListItemButton\";\r\n// import ListItemIcon from \"@mui/material/ListItemIcon\";\r\n// import ListItemText from \"@mui/material/ListItemText\";\r\n// import { Avatar, styled, useTheme, Tooltip } from \"@mui/material\";\r\n// import MuiDrawer from \"@mui/material/Drawer\";\r\n// import { useLocation, useNavigate } from \"react-router-dom\";\r\n// import { grey } from \"@mui/material/colors\";\r\n// import DashboardOutlinedIcon from \"@mui/icons-material/DashboardOutlined\";\r\n// import corelia from \"../assets/corelia.jpeg\";\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const openedMixin = (theme) => ({\r\n//   width: drawerWidth,\r\n//   transition: theme.transitions.create(\"width\", {\r\n//     easing: theme.transitions.easing.sharp,\r\n//     duration: theme.transitions.duration.enteringScreen,\r\n//   }),\r\n//   overflowX: \"hidden\",\r\n// });\r\n\r\n// const closedMixin = (theme) => ({\r\n//   transition: theme.transitions.create(\"width\", {\r\n//     easing: theme.transitions.easing.sharp,\r\n//     duration: theme.transitions.duration.leavingScreen,\r\n//   }),\r\n//   overflowX: \"hidden\",\r\n//   width: `calc(${theme.spacing(7)} + 1px)`,\r\n//   [theme.breakpoints.up(\"sm\")]: {\r\n//     width: `calc(${theme.spacing(8)} + 1px)`,\r\n//   },\r\n// });\r\n\r\n// const Drawer = styled(MuiDrawer, {\r\n//   shouldForwardProp: (prop) => prop !== \"open\",\r\n// })(({ theme, open }) => ({\r\n//   width: drawerWidth,\r\n//   flexShrink: 0,\r\n//   whiteSpace: \"nowrap\",\r\n//   boxSizing: \"border-box\",\r\n//   ...(open && {\r\n//     ...openedMixin(theme),\r\n//     \"& .MuiDrawer-paper\": openedMixin(theme),\r\n//   }),\r\n//   ...(!open && {\r\n//     ...closedMixin(theme),\r\n//     \"& .MuiDrawer-paper\": closedMixin(theme),\r\n//   }),\r\n// }));\r\n\r\n// const DrawerHeader = styled(\"div\")(({ theme }) => ({\r\n//   display: \"flex\",\r\n//   alignItems: \"center\",\r\n//   justifyContent: \"flex-end\",\r\n//   padding: theme.spacing(0, 1),\r\n//   ...theme.mixins.toolbar,\r\n// }));\r\n\r\n// const Array1 = [\r\n//   { text: \"Dashboard\", icon: <DashboardOutlinedIcon />, path: \"/dashboard\" },\r\n//   { text: \"Tickets\", path: \"/tickets\" },\r\n//   { text: \"Teams\", path: \"/teamsdashboard\" },\r\n//   { text: \"products\", path: \"/productpage\" },\r\n//   { text: \"Infrastructure\", path: \"/infrastructure\" },\r\n//   { text: \"Safe\", path: \"/safe\" },\r\n//   { text: \"Documents\", path: \"/documents\" },\r\n//   { text: \"Knowledge\", path: \"/knowledge\" },\r\n//   { text: \"Tasks\", path: \"/tasks\" },\r\n//   { text: \"Communication\", path: \"/communication\" },\r\n//   { text: \"Reports\", path: \"/reports\" },\r\n// ];\r\n\r\n// const SideBar = ({ open, handleDrawerClose }) => {\r\n//   const location = useLocation();\r\n//   const navigate = useNavigate();\r\n//   const theme = useTheme();\r\n\r\n//   return (\r\n//     <Drawer variant=\"permanent\" open={open}>\r\n//       <Divider />\r\n//       <Avatar\r\n//         sx={{\r\n//           alignContent: \"center\",\r\n//           textAlign: \"center\",\r\n//           width: 200,\r\n//           marginLeft: 1,\r\n//           height: 72,\r\n//           borderRadius: 0,\r\n//         }}\r\n//         alt=\"Randa Erfan\"\r\n//         src={corelia}\r\n//       />\r\n\r\n//       <Divider />\r\n\r\n//       <List>\r\n//         {Array1.map((item) => (\r\n//           <ListItem key={item.path} disablePadding sx={{ display: \"block\" }}>\r\n//             <Tooltip title={open ? null : item.text} placement=\"left\">\r\n//               <ListItemButton\r\n//                 onClick={() => {\r\n//                   navigate(item.path);\r\n//                 }}\r\n//                 sx={{\r\n//                   minHeight: 48,\r\n//                   justifyContent: open ? \"initial\" : \"center\",\r\n//                   px: 2.5,\r\n//                   bgcolor:\r\n//                     location.pathname === item.path\r\n//                       ? theme.palette.mode === \"dark\"\r\n//                         ? grey[800]\r\n//                         : grey[300]\r\n//                       : null,\r\n//                 }}\r\n//               >\r\n//                 <ListItemIcon\r\n//                   sx={{\r\n//                     minWidth: 0,\r\n//                     mr: open ? 3 : \"auto\",\r\n//                     justifyContent: \"center\",\r\n//                   }}\r\n//                 >\r\n//                   {item.icon}\r\n//                 </ListItemIcon>\r\n//                 <ListItemText\r\n//                   primary={item.text}\r\n//                   sx={{ opacity: open ? 1 : 0 }}\r\n//                 />\r\n//               </ListItemButton>\r\n//             </Tooltip>\r\n//           </ListItem>\r\n//         ))}\r\n//       </List>\r\n//     </Drawer>\r\n//   );\r\n// };\r\n\r\n// export default SideBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,SAAS,GAAG,CAChB;IAAEC,IAAI,EAAE,GAAG;IAAEC,KAAK,EAAE;EAAW,CAAC,EAChC;IAAED,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAS,CAAC,EACrC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAC3C;IAAED,IAAI,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAS,CAAC,EACzC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,KAAK,EAAE;EAAiB,CAAC,EACpD;IAAED,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,IAAI,EAAE,kBAAkB;IAAEC,KAAK,EAAE;EAAiB,CAAC,EACrD;IAAED,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,IAAI,EAAE,gBAAgB;IAAEC,KAAK,EAAE;EAAgB,CAAC,EAClD;IAAED,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAU,CAAC,CACvC;EAED,oBACEN,OAAA;IAAOO,SAAS,EAAC,SAAS;IAAAC,QAAA,eACxBR,OAAA;MAAKO,SAAS,EAAC,aAAa;MAAAC,QAAA,EACzBJ,SAAS,CAACK,GAAG,CAAEC,IAAI,iBAClBV,OAAA,CAACH,IAAI;QAEHc,EAAE,EAAED,IAAI,CAACL,IAAK;QACdE,SAAS,EAAE,gBAAgBJ,QAAQ,CAACS,QAAQ,KAAKF,IAAI,CAACL,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAG,QAAA,eAU7ER,OAAA;UAAMO,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEE,IAAI,CAACJ;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAZ9CN,IAAI,CAACL,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAAAd,EAAA,CAxCKD,OAAO;EAAA,QACMH,WAAW;AAAA;AAAAmB,EAAA,GADxBhB,OAAO;AA0Cb,eAAeA,OAAO;;AAEtgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}